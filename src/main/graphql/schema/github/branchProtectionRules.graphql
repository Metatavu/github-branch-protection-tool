fragment branchProtection on BranchProtectionRule {
    allowsDeletions
    allowsForcePushes
    creator {
        login
    }
    id
    isAdminEnforced
    requiredStatusCheckContexts
    requiredApprovingReviewCount
    requiresApprovingReviews
    requiresCodeOwnerReviews
    requiresStatusChecks
    restrictsPushes
    restrictsReviewDismissals
    dismissesStaleReviews
    requiresConversationResolution
    lockBranch
    requiresDeployments
    requiresLinearHistory
    requiresCommitSignatures
    pattern

}

query showBranchProtection($owner:String!, $repo:String!) {
    repository(name: $repo, owner: $owner) {
        id
        name
        branchProtectionRules(first: 10) {
            totalCount
            nodes {
                ...branchProtection
            }
        }
    }
}

mutation createBranchProtection($repositoryId:ID!, $branchPattern:String!, $statusCheck:Boolean!) {
    createBranchProtectionRule(input: {
        allowsDeletions: false
        allowsForcePushes:false
        dismissesStaleReviews:false
        isAdminEnforced:false
        pattern: $branchPattern
        repositoryId: $repositoryId
        requiresApprovingReviews:true
        requiredApprovingReviewCount:1
        requiresCodeOwnerReviews:false
        requiresStatusChecks:$statusCheck
        requiresConversationResolution: true
        restrictsReviewDismissals:false
        lockBranch:false
        requiresDeployments:false
        requiresLinearHistory:false
        requiresCommitSignatures:false
    }) {
        branchProtectionRule {
            ...branchProtection
        }
    }
}

mutation updateBranchProtection($ruleId:ID!, $branchPattern:String!, $statusCheck:Boolean!) {
    updateBranchProtectionRule(input: {
        branchProtectionRuleId: $ruleId
        allowsDeletions: false
        allowsForcePushes:false
        dismissesStaleReviews:false
        isAdminEnforced:false
        pattern: $branchPattern
        requiresApprovingReviews:true
        requiredApprovingReviewCount:1
        requiresCodeOwnerReviews:false
        requiresStatusChecks:$statusCheck
        requiresConversationResolution: true
        restrictsReviewDismissals:false
        lockBranch:false
        requiresDeployments:false
        requiresLinearHistory:false
        requiresCommitSignatures:false
    }) {
        branchProtectionRule {
            ...branchProtection
        }
    }
}